{/* <!-- Profile dropdown --> */}
                            <div className="relative ml-3">
                                <div>
                                    <button type="button" onClick={() => setOpenForProfile(!isOpenProfile)} className="relative flex rounded-full text-sm" id="user-menu-button" aria-expanded="false" aria-haspopup="true">
                                        <span className="absolute -inset-1.5"></span>
                                        <span className="sr-only">Open user menu</span>
                                        <img className="h-10 w-10 rounded-full" src="https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80" alt="" />
                                    </button>
                                </div>
                                {isOpenProfile && (
                                    <div className="absolute right-0 z-10 mt-2 w-48 origin-top-right rounded-md py-1 shadow-lg" role="menu" aria-orientation="vertical" aria-labelledby="user-menu-button">
                                        <a href="#" className="block px-4 py-2 text-sm text-gray-700" role="menuitem" id="user-menu-item-0">Your Profile</a>
                                        <a href="#" className="block px-4 py-2 text-sm text-gray-700" role="menuitem" id="user-menu-item-1">Settings</a>
                                        <a href="#" className="block px-4 py-2 text-sm text-gray-700" role="menuitem" id="user-menu-item-2">Sign out</a>
                                    </div>
                                )}

                            </div>

-------------------------------

import { useNavigate } from "react-router-dom";
import { useSelector } from "react-redux";
import { useEffect, useState } from "react";

const PrivateRoute = ({ children }) => {
    const navigate = useNavigate();
    const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);

    const [isRedirecting, setIsRedirecting] = useState(false);

    useEffect(() => {
        if (isAuthenticated) {
            setIsRedirecting(true);
        }
    }, [isAuthenticated]);

    if (isRedirecting) {
        return navigate('/');
    }

    return children;
};

export default PrivateRoute;

-----------------------------------------------------

5. Implement a Progress Bar
Add a progress bar that updates as the user moves through each step, giving them a sense of how much theyâ€™ve completed and how much is left.
6. Lazy Load Form Fields
Consider loading more fields dynamically as the user proceeds to the next step or section. This can help reduce the initial load time of the form, and can also create a smoother experience.

8. Use a Wizard Component
A "Wizard" form layout allows for easier navigation through multiple steps. This could be achieved through libraries like react-step-wizard or similar.
A wizard allows the user to go through different steps (or "pages") of the form while keeping a consistent UI.

-------------------------------------------------------
search box as soon as it gets the input the button gets clicked and the rest search funtionality

carousel picture flipkart on hover the zoom feature 

design for full car detail page
